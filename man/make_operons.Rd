% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotate_operons.R
\name{make_operons}
\alias{make_operons}
\title{Create and Summarize Operons Based on Genes and CAGE Peaks}
\usage{
make_operons(genes, window = 500, cage)
}
\arguments{
\item{genes}{A \code{GRanges} object containing genomic coordinates of genes to be used for initial
operon calculation.}

\item{window}{An integer specifying the maximum distance in base pairs between genes to consider
them as part of the same operon. Defaults to 500.}

\item{cage}{A \code{GRanges} object containing CAGE peaks used to refine operon boundaries by
identifying potential transcription start sites.}
}
\value{
A summarized data frame containing the boundaries of each operon, the \code{seqnames},
\code{strand}, and \code{source} of the operon, and lists of gene IDs categorized as either leader or
trailing within their respective operons.
}
\description{
This function integrates the process of calculating operons from genomic coordinates of genes,
splitting these operons based on CAGE peak information, and summarizing the results. It first
calculates operons based on proximity of genes on the same strand. Then, it refines these operons
by excluding regions overlapping with specified CAGE peaks, effectively splitting operons based
on potential transcription start sites. Finally, it summarizes the operons, identifying leader
and trailing genes within each operon based on their genomic positions.
}
\examples{
# Assume 'genes' and 'cage' are predefined GRanges objects
annotation_gr <- system.file("extdata", "genes_5utr.gff3", package="annotationpolish") |> rtracklayer::import()
cage_peaks <- read_cage("https://raw.githubusercontent.com/oist/LuscombeU-CAGE_libraries/main/2021-12-17_Okinawa_Oik/CrossAlignments/consensus_clusters_no_OKItoOKI.bed", "https://raw.githubusercontent.com/oist/LuscombeU-CAGE_libraries/main/2021-12-17_Okinawa_Oik/CrossAlignments/consensus_clusters_sl_OKItoOKI.bed" )
make_operons(annotation_gr |> filter(type == "gene"), window = 500, cage_peaks |> filter(tss_type == "nosl"))
}
