% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign_transcript_gene_ID.R
\name{rename_Name_based_on_gene_id}
\alias{rename_Name_based_on_gene_id}
\title{Rename "Name" Field Based on Gene ID}
\usage{
rename_Name_based_on_gene_id(gr, convert_NA_to_gene_id = TRUE)
}
\arguments{
\item{gr}{A \code{GRanges} object or a data frame containing the genomic annotation data.}

\item{convert_NA_to_gene_id}{Logical value indicating whether to convert missing (NA) \code{Name} values to \code{gene_id}. Defaults to \code{TRUE}.}
}
\value{
If \code{convert_NA_to_gene_id} is \code{TRUE}, returns a tibble with the updated \code{Name} values. Otherwise, returns a \code{GRanges} object with extra columns.
}
\description{
This function updates the \code{Name} column of a \code{GRanges} object or data frame to the \code{Name} corresponding to the "gene" type within each \code{gene_id} group. If the \code{Name} field is missing (NA), it can optionally be filled with the \code{gene_id} value.
}
\examples{
# Example with GRanges object
gr <- rtracklayer::import.gff3("example.gff3")
result <- rename_Name_based_on_gene_id(gr)

# Example with data frame input
df <- data.frame(
  gene_id = c("g1", "g1", "g2"),
  type = c("gene", "exon", "gene"),
  Name = c("gene1", "exon1", "gene2")
)
result <- rename_Name_based_on_gene_id(df, convert_NA_to_gene_id = FALSE)
}
